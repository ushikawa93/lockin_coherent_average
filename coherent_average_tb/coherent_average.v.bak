
module coherent_average(

	input clk_rapido,
	input clk_lento,
	
	input [14:0] x,
	input x_valid,
	
	output reg [31:0] data_out,
	output data_out_valid
	
);


parameter M = 32;
parameter Q = 32;
parameter N = 16;

reg [Q-1:0] y [M-1:0];
reg [31:0] n,k,h;
wire done_calculating , done_transmiting;

always @ (posedge clk_rapido)
begin

	if(x_valid && !done_calculating)
	begin
		
		y[n] <= y[n] + x;
		n <= (n == M-1)? 0:n+1;
		k <= (n == M-1)? k+1:k;
	
	end
	
end

assign done_calculating = (k == N);
assign done_transmiting = done_calculating && (h < M);
assign data_out_valid = done_calculating && !done_transmiting;

always @ (posedge clk_lento)
begin
	
	if(done_calculating && !done_transmiting )
	begin
		
		data_out <= y[h];
		h <= (h == M-1)? 0:h+1; 
	end
end


endmodule


